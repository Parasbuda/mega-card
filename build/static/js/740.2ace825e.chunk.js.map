{"version":3,"file":"static/js/740.2ace825e.chunk.js","mappings":"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","sources":["Component/NoData/index.js","Component/Pagination/DisplayEntries.js","Component/Pagination/index.js","Component/PaginationBlock/index.js","Component/Pagination/PaginationLimit.js","Component/Status/index.js","Component/Tooltip/Tooltip.js","Pages/UserGroup/UserGroup.js"],"sourcesContent":["import React from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport Tooltip from \"../Tooltip/Tooltip\";\r\n\r\nconst index = ({ search, onClick, addPermission }) => {\r\n  return (\r\n    <div className=\"text-center justify-content-center no-data\">\r\n      <h4 className=\"fw-normal mb-3\">No data to Display</h4>\r\n      {!search && addPermission && (\r\n        <h6>\r\n          Please{\" \"}\r\n          <Tooltip content=\"Add\">\r\n            <button\r\n              onClick={onClick}\r\n              className=\"btn btn-primary waves-effect waves-light btn-sm mx-2 p-1 nodata-btn\"\r\n            >\r\n              <FaPlus className=\"nodata-icon\" />\r\n              &nbsp;Add\r\n            </button>\r\n          </Tooltip>{\" \"}\r\n          some...\r\n        </h6>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\n\r\nconst DisplayEntries = ({ offset, limit, count }) => {\r\n  return(\r\n    <React.Fragment>\r\n      <p>\r\n        Showing {offset} to{\" \"}\r\n        {limit > count ? count : limit === 0 ? count : limit} of {count} entries\r\n      </p>  \r\n    </React.Fragment> \r\n  );\r\n};\r\n\r\nexport default React.memo(DisplayEntries);","import React from \"react\";\r\nconst Pagination = ({\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  handleClick,\r\n  currentPage,\r\n  maxPageNumberLimit,\r\n  minPageNumberLimit,\r\n}) => {\r\n  const pageNumbers = [];\r\n  if (postsPerPage > 0) {\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n  }\r\n  let pageIncrementBtn = null;\r\n  if (pageNumbers.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = (\r\n      <button className=\"page-link\" onClick={() => handleClick(\"next\")}>\r\n        &hellip;\r\n      </button>\r\n    );\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = (\r\n      <button className=\"page-link\" onClick={() => handleClick(\"previous\")}>\r\n        &hellip;\r\n      </button>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <ul className=\"pagination pagination-sm justify-content-end\">\r\n        <li className=\"page-item \">\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => handleClick(\"previous\")}\r\n            disabled={currentPage === pageNumbers[0] ? true : false}\r\n          >\r\n            &laquo;\r\n          </button>\r\n        </li>\r\n        {/* {pageDecrementBtn} */}\r\n        {pageNumbers.map((number, i) => {\r\n          if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n            return (\r\n              <li className=\"page-item\" key={number}>\r\n                <button\r\n                  onClick={() => paginate(number)}\r\n                  className={`page-link ${\r\n                    i + 1 === currentPage ? \"active\" : null\r\n                  }`}\r\n                >\r\n                  {number}\r\n                </button>\r\n              </li>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n        {/* {pageIncrementBtn} */}\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => handleClick(\"next\")}\r\n            disabled={\r\n              currentPage === pageNumbers[pageNumbers.length - 1] ? true : false\r\n            }\r\n          >\r\n            &raquo;\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Pagination);\r\n","import React from \"react\";\r\nimport DisplayEntries from \"../Pagination/DisplayEntries\";\r\nimport Pagination from \"../Pagination\";\r\nconst index = ({\r\n  currentPage,\r\n  postsPerPage,\r\n  count,\r\n  paginate,\r\n  handleClick,\r\n  setCurrentPage,\r\n  minPageNumberLimit,\r\n  maxPageNumberLimit,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <DisplayEntries\r\n            offset={1 + (currentPage - 1) * postsPerPage}\r\n            limit={postsPerPage * currentPage}\r\n            count={count}\r\n          />\r\n        </div>\r\n        {postsPerPage < count && (\r\n          <div className=\"col-6 text-right\">\r\n            <Pagination\r\n              postsPerPage={postsPerPage}\r\n              totalPosts={count}\r\n              paginate={paginate}\r\n              handleClick={handleClick}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              minPageNumberLimit={minPageNumberLimit}\r\n              maxPageNumberLimit={maxPageNumberLimit}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\n\r\nconst PaginationLimit = ({ postsPerPage, setPostsPerPage }) => {\r\n  const handleChange = (e) => {\r\n    const data = Number(e.target.value);\r\n    setPostsPerPage(data);\r\n  };\r\n  return (\r\n    <>\r\n      <p className=\"fw-normal p-0 m-0\">\r\n        Show\r\n        <span className=\"ml-1 mr-1\">\r\n          {\" \"}\r\n          <select value={postsPerPage} onChange={handleChange}>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"40\">40</option>\r\n            <option value=\"99999999\">All</option>\r\n          </select>\r\n        </span>{\" \"}\r\n        entries\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaginationLimit);","import React from \"react\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nconst index = ({ active }) => {\r\n  return (\r\n    <div>\r\n      {active ? (\r\n        <FaCheckCircle style={{ color: \"green\", fontSize: \"15px\" }} />\r\n      ) : (\r\n        <BsFillXCircleFill\r\n          style={{\r\n            color: \"rgba(230, 16, 16, 0.979)\",\r\n            fontSize: \"15px\",\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nconst Tooltip = ({ content, children }) => {\r\n  return <Tippy content={content}>{children}</Tippy>;\r\n};\r\n\r\nexport default Tooltip;","import React, { useState } from \"react\";\r\nimport Status from \"../../Component/Status\";\r\nimport { FaEdit, FaPlus } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getParticularPage,\r\n  getPrevious,\r\n  getNext,\r\n} from \"../../Redux/UserGroup/thunk\";\r\nimport PaginationLimit from \"../../Component/Pagination/PaginationLimit\";\r\nimport { userGroupConstants } from \"../../Redux/UserGroup/constants\";\r\nimport PaginationBlock from \"../../Component/PaginationBlock\";\r\nimport NoData from \"../../Component/NoData\";\r\nimport Tooltip from \"../../Component/Tooltip/Tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst UserGroup = ({\r\n  currentPage,\r\n  setPostsPerPage,\r\n  postsPerPage,\r\n  setCurrentPage,\r\n  count,\r\n  maxPageNumberLimit,\r\n  setMaxPageNumberLimit,\r\n  minPageNumberLimit,\r\n  setMinPageNumberLimit,\r\n  search,\r\n}) => {\r\n  const history=useHistory()\r\n  const permissions = useSelector((state) => state.auth.permissions);\r\n  const is_superuser = useSelector((state) => state.auth.is_superuser);\r\n  const userGroups = useSelector((state) => state.userGroup.userGroups);\r\n  const next = useSelector((state) => state.userGroup.next);\r\n  const previous = useSelector((state) => state.userGroup.previous);\r\n  const dispatch = useDispatch();\r\n\r\n  // for pagination\r\n  const [pageNumberLimit] = useState(5);\r\n\r\n  //change page\r\n  const paginate = (number) => {\r\n    dispatch(getParticularPage({ number, postsPerPage }));\r\n    setCurrentPage(number);\r\n  };\r\n\r\n  //handle Click\r\n  const handleClick = (type) => {\r\n    if (type === \"previous\") {\r\n      dispatch(getPrevious(previous));\r\n      setCurrentPage((prevState) => prevState - 1);\r\n      if ((currentPage - 1) % pageNumberLimit === 0) {\r\n        setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n      }\r\n    } else if (type === \"next\") {\r\n      dispatch(getNext(next));\r\n      setCurrentPage((prevState) => prevState + 1);\r\n      if (currentPage + 1 > maxPageNumberLimit) {\r\n        setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n      }\r\n    }\r\n  };\r\n\r\n  //pagination end\r\n\r\n  //sorting end\r\n\r\n  //edit function for the province\r\n  const handleEdit = (id) => {\r\n    dispatch({ type: userGroupConstants.USER_GROUP_EDIT_SUCCESS, payload: id });\r\n    history.push(\"/create-user-group\");\r\n  };\r\n  const addPermission =\r\n    permissions?.includes(\"add_group\") || is_superuser ? true : false;\r\n  return (\r\n    <>\r\n      <div className=\"row m-0 p-0\">\r\n        {userGroups?.length > 0 && (\r\n          <>\r\n            <div className=\"col-6\">\r\n              <PaginationLimit\r\n                postsPerPage={postsPerPage}\r\n                setPostsPerPage={setPostsPerPage}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-6 text-right\">\r\n              {(is_superuser || permissions?.includes(\"add_group\")) && (\r\n                <Tooltip content=\"Add\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary waves-effect waves-light btn-sm float-end\"\r\n                    onClick={() => history.push(\"/create-user-group\")}\r\n                  >\r\n                    <FaPlus className=\"mb-1\" />\r\n                    &nbsp;Add\r\n                  </button>\r\n                </Tooltip>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {userGroups?.length > 0 ? (\r\n        <div className=\"mt-2\">\r\n          <div className=\"table-scrollable\">\r\n            <table className=\"table table-hover table-bordered text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" style={{ width: \"8%\" }}>\r\n                    S.N\r\n                  </th>\r\n                  <th scope=\"col\">User Group</th>\r\n                  <th scope=\"col\">Active</th>\r\n                  {(is_superuser || permissions?.includes(\"update_group\")) && (\r\n                    <th scope=\"col\">Action</th>\r\n                  )}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {userGroups?.length > 0 &&\r\n                  userGroups.map((userGroup, i) => {\r\n                    const { id, name, is_active } = userGroup;\r\n\r\n                    return (\r\n                      <tr key={id}>\r\n                        <td className=\"fw-bold\" style={{ width: \"8%\" }}>\r\n                          {postsPerPage * (currentPage - 1) + (i + 1)}\r\n                        </td>\r\n                        <td>{name}</td>\r\n                        <td>\r\n                          <Status active={is_active} />\r\n                        </td>\r\n                        {(is_superuser ||\r\n                          permissions?.includes(\"update_group\")) && (\r\n                          <td>\r\n                            <Tooltip content=\"Edit\">\r\n                              <button\r\n                                className=\"btn btn-sm btn-edit btn-primary mx-1\"\r\n                                onClick={() => handleEdit(id)}\r\n                              >\r\n                                <FaEdit />\r\n                              </button>\r\n                            </Tooltip>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {count > 0 && (\r\n            <PaginationBlock\r\n              currentPage={currentPage}\r\n              postsPerPage={postsPerPage}\r\n              count={count}\r\n              paginate={paginate}\r\n              handleClick={handleClick}\r\n              setCurrentPage={setCurrentPage}\r\n              minPageNumberLimit={minPageNumberLimit}\r\n              maxPageNumberLimit={maxPageNumberLimit}\r\n            />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <NoData\r\n          search={search}\r\n          onClick={() => history.push(\"/create-user-group\")}\r\n          addPermission={addPermission}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserGroup;\r\n"],"names":["search","onClick","addPermission","className","content","DisplayEntries","offset","limit","count","React","Pagination","postsPerPage","totalPosts","paginate","handleClick","currentPage","maxPageNumberLimit","minPageNumberLimit","pageNumbers","i","Math","ceil","push","length","disabled","map","number","setCurrentPage","PaginationLimit","setPostsPerPage","value","onChange","e","data","Number","target","active","style","color","fontSize","children","setMaxPageNumberLimit","setMinPageNumberLimit","history","useHistory","permissions","useSelector","state","auth","is_superuser","userGroups","userGroup","next","previous","dispatch","useDispatch","useState","pageNumberLimit","includes","type","scope","width","id","name","is_active","userGroupConstants","payload","handleEdit","getParticularPage","getPrevious","prevState","getNext"],"sourceRoot":""}