{"version":3,"file":"static/js/413.14e62ace.chunk.js","mappings":"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","sources":["Component/Skeleton/ListingSkeleton.js","Pages/UserGroup/index.js","Redux/UserGroup/api.js","Redux/UserGroup/action.js","Redux/UserGroup/thunk.js","utils/defaultLimit.js"],"sourcesContent":["import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nconst ListingSkeleton = () => {\r\n  return (\r\n    <>\r\n      <div className=\"row \">\r\n        <div className=\"col-6 d-flex \">\r\n          <Skeleton width={200} height={25} />\r\n        </div>\r\n        <div className=\"col-6 d-flex justify-content-end\">\r\n          <Skeleton width={80} height={30} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-2\">\r\n        <Skeleton height={40} />\r\n        <Skeleton count={10} height={25} />\r\n      </div>\r\n      <div className=\"row d-flex mt-2\">\r\n        <div className=\"col-6\">\r\n          <Skeleton width={220} height={20} />\r\n        </div>\r\n        <div className=\"col-6 d-flex justify-content-end\">\r\n          <Skeleton width={200} height={30} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListingSkeleton;\r\n","import React, { useState, useEffect, lazy } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ListingSkeleton from \"../../Component/Skeleton/ListingSkeleton\";\r\nimport { getUserGroup, handleSearch } from \"../../Redux/UserGroup/thunk\";\r\nimport {defaultLimit} from \"../../utils/defaultLimit\";\r\nconst UserGroup = lazy(() => import(\"./UserGroup\"));\r\nconst UserGroupListing = () => {\r\n  const loading = useSelector((state) => state.userGroup.loading);\r\n  const count = useSelector((state) => state.userGroup.count);\r\n  const edit = useSelector((state) => state.userGroup.edit);\r\n  const search = useSelector((state) => state.search.search);\r\n  const dispatch = useDispatch();\r\n\r\n  // for pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n  //pagination end\r\n  //loading all the food\r\n  useEffect(() => {\r\n    if (postsPerPage === 0) {\r\n      if (search === \"\") {\r\n        dispatch(getUserGroup(count));\r\n      } else {\r\n        dispatch(handleSearch(search, count));\r\n      }\r\n    } else {\r\n      if (search === \"\") {\r\n        if (postsPerPage === defaultLimit) {\r\n          dispatch(getUserGroup(postsPerPage));\r\n        } else {\r\n          setCurrentPage(1);\r\n          dispatch(getUserGroup(postsPerPage));\r\n        }\r\n      } else {\r\n        setCurrentPage(1);\r\n        setMaxPageNumberLimit(5);\r\n        setMinPageNumberLimit(0);\r\n        dispatch(handleSearch(search, postsPerPage));\r\n      }\r\n    }\r\n  }, [dispatch, postsPerPage, search]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card \">\r\n        <div className=\"header-content\">\r\n          <h4 className=\"mb-sm-0 fw-normal\">User Group</h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {loading ? (\r\n            <ListingSkeleton />\r\n          ) : (\r\n            <UserGroup\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              postsPerPage={postsPerPage}\r\n              setPostsPerPage={setPostsPerPage}\r\n              count={count}\r\n              maxPageNumberLimit={maxPageNumberLimit}\r\n              setMaxPageNumberLimit={setMaxPageNumberLimit}\r\n              minPageNumberLimit={minPageNumberLimit}\r\n              setMinPageNumberLimit={setMinPageNumberLimit}\r\n              search={search}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserGroupListing;\r\n","import axiosInstance from \"../../utils/axios\";\r\n\r\n//obtaining the paginated data\r\nexport const getUserGroup = (postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/group-app/group?offset=0&limit=${postsPerPage}&ordering=-id`\r\n  );\r\n\r\n//obtaining all data\r\nexport const getAllUserGroup = () =>\r\n  axiosInstance.get(`api/v1/group-app/group`);\r\n\r\n//obtaining the previous page data from paginated data\r\nexport const getPrevious = (previous) => axiosInstance.get(previous);\r\n\r\n//obtaining the next page data from paginated data\r\nexport const getNext = (next) => axiosInstance.get(next);\r\n\r\n//obtaining the particular page data from paginated data\r\nexport const getPageUserGroup = (number, postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/group-app/group?offset=${\r\n      (number - 1) * postsPerPage\r\n    }&limit=${postsPerPage}&ordering=-id`\r\n  );\r\n\r\n//creating function\r\nexport const createUserGroup = (body) =>\r\n  axiosInstance.post(`api/v1/group-app/group`, body);\r\n\r\n\r\n\r\n//update function\r\nexport const updateUserGroup = (id, body) =>\r\n  axiosInstance.patch(`api/v1/group-app/group/${id}`, body);\r\n\r\n//searching function\r\nexport const handleSearch = (search, postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/group-app/group?offset=0&limit=${postsPerPage}&search=${search}`\r\n  );\r\n// checking the redundant data\r\nexport const checkRedundantData = (e, cancelToken) =>\r\n  axiosInstance.get(`api/v1/group-app/group?name=${e.target.value}`, {\r\n    cancelToken: cancelToken.token,\r\n  });\r\n//get All Permission\r\nexport const getAllPermission = () => {\r\n  return axiosInstance.get(`api/v1/group-app/permission`);\r\n};\r\n//get all models\r\nexport const getAllPermissionCategory = () => {\r\n  return axiosInstance.get(`api/v1/group-app/permission-category?ordering=-id`);\r\n};\r\nexport const getSpecificPermissions = (id) =>\r\n  axiosInstance.get(`api/v1/group-app/permission?category=${id}`);\r\n","import { userGroupConstants } from \"./constants\";\r\n// actions\r\nexport const loadingAction = () => ({\r\n  type: userGroupConstants.LOADING_USER_GROUP,\r\n});\r\n\r\nexport const getUserGroupSuccessAction = (data) => ({\r\n  type: userGroupConstants.GET_USER_GROUP_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getUserGroupFailAction = (error) => ({\r\n  type: userGroupConstants.GET_USER_GROUP_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const getAllUserGroupSuccessAction = (data) => ({\r\n  type: userGroupConstants.GET_ALL_USER_GROUP_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getAllUserGroupFailAction = (error) => ({\r\n  type: userGroupConstants.GET_ALL_USER_GROUP_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const createUserGroupSuccessAction = (data) => ({\r\n  type: userGroupConstants.CREATE_USER_GROUP_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const createUserGroupFailAction = (error) => ({\r\n  type: userGroupConstants.CREATE_USER_GROUP_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const updateUserGroupSuccessAction = (data) => ({\r\n  type: userGroupConstants.UPDATE_USER_GROUP_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updateUserGroupFailAction = (data) => ({\r\n  type: userGroupConstants.UPDATE_USER_GROUP_FAIL,\r\n  payload: data,\r\n});\r\n\r\nexport const getAllUserGroupPermissionSuccess = (data) => ({\r\n  type: userGroupConstants.GET_USER_PERMISSION_SUCCESS,\r\n  payload: data,\r\n});\r\nexport const getAllUserGroupPermissionFail = (error) => ({\r\n  type: userGroupConstants.GET_USER_PERMISSION_FAIL,\r\n  payload: error,\r\n});\r\n\r\n\r\nexport const getAllDataSuccessAction = (data) => ({\r\n  type: userGroupConstants.GET_ALL_DATA_SUCCESS,\r\n  payload: data,\r\n});\r\nexport const getAllDataFailAction = () => ({\r\n  type: userGroupConstants.GET_ALL_DATA_FAIL,\r\n});\r\n","import * as API from \"./api\";\r\nimport * as action from \"./action\";\r\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\r\n//get  User Role\r\nexport const getUserGroup = (postsPerPage) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getUserGroup(postsPerPage);\r\n    dispatch(action.getUserGroupSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserGroupFailAction(error));\r\n  }\r\n};\r\n// get all UserRole\r\nexport const getAllUserGroup = () => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getAllUserGroup();\r\n    dispatch(action.getAllUserGroupSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getAllUserGroupFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get previous  page\r\nexport const getPrevious = (previous) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getPrevious(previous);\r\n    dispatch(action.getUserGroupSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserGroupFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get next  page\r\nexport const getNext = (next) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getNext(next);\r\n    dispatch(action.getUserGroupSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserGroupFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get particular page\r\nexport const getParticularPage =\r\n  ({ number, postsPerPage }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(action.loadingAction());\r\n      const { data } = await API.getPageUserGroup(number, postsPerPage);\r\n      dispatch(action.getUserGroupSuccessAction(data));\r\n    } catch (error) {\r\n      dispatch(action.getUserGroupFailAction(error));\r\n      errorFunction(error);\r\n    }\r\n  };\r\nexport const createUserGroup =\r\n  ({ name, is_active, permissions }, history) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const body = JSON.stringify({ name, is_active, permissions });\r\n      dispatch(action.loadingAction());\r\n      const { data } = await API.createUserGroup(body);\r\n      successFunction(\"User Group Added Successfully\");\r\n      history.push(\"/user-group\");\r\n      dispatch(getParticularPage({ number: 1, postsPerPage: 10 }));\r\n    } catch (error) {\r\n      dispatch(action.createUserGroupFailAction(error));\r\n      errorFunction(\"Failed to create User Group.\");\r\n    }\r\n  };\r\n\r\n//update\r\nexport const updateUserGroup = (id, history, values) => async (dispatch) => {\r\n  const { name, permissions, is_active, remarks } = values;\r\n\r\n  try {\r\n    const body = JSON.stringify({ name, permissions, is_active, remarks });\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.updateUserGroup(id, body);\r\n    // await dispatch(action.updateUserRoleSuccessAction(data));\r\n    successFunction(\"User Group Updated Successfully \");\r\n    dispatch(getParticularPage({ number: 1, postsPerPage: 10 }));\r\n    history.push(\"/user-group\");\r\n  } catch (error) {\r\n    dispatch(action.updateUserGroupFailAction(error));\r\n    errorFunction(\"Failed to Update User Group\");\r\n  }\r\n};\r\n\r\n//get All permission\r\nexport const getAllPermission = () => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getAllPermission();\r\n    if (data.count === 0) {\r\n      successFunction(\"No permissions available\");\r\n    }\r\n    dispatch(action.getAllUserGroupPermissionSuccess(data));\r\n  } catch (error) {\r\n    dispatch(action.getAllUserGroupPermissionFail(error));\r\n  }\r\n};\r\n//get All Models\r\n\r\n//handle Search\r\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.handleSearch(search, postsPerPage);\r\n    dispatch(action.getUserGroupSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserGroupFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n// specific permissions\r\nexport const getSpecificUserPermissions = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getSpecificPermissions(id);\r\n    if (data.count === 0) {\r\n      dispatch(successFunction(\"No permissions available \"));\r\n    }\r\n    dispatch(action.getAllUserGroupPermissionSuccess(data));\r\n  } catch (error) {\r\n    dispatch(action.getAllUserGroupPermissionFail(error));\r\n  }\r\n};\r\n","export const defaultLimit = 10;\r\n"],"names":["className","width","height","count","UserGroup","lazy","loading","useSelector","state","userGroup","search","edit","dispatch","useDispatch","useState","currentPage","setCurrentPage","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","postsPerPage","setPostsPerPage","useEffect","getUserGroup","handleSearch","defaultLimit","axiosInstance","getPrevious","previous","getNext","next","getPageUserGroup","number","createUserGroup","body","updateUserGroup","id","getSpecificPermissions","loadingAction","type","userGroupConstants","getUserGroupSuccessAction","data","payload","getUserGroupFailAction","error","updateUserGroupFailAction","getAllUserGroupPermissionSuccess","getAllUserGroupPermissionFail","action","API","errorFunction","getParticularPage","history","name","is_active","permissions","JSON","stringify","successFunction","push","values","remarks","getAllPermission","getSpecificUserPermissions"],"sourceRoot":""}