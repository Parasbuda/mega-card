{"version":3,"file":"static/js/907.d6ed5594.chunk.js","mappings":"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","sources":["Component/TextError/TextError.js","Pages/ResetPassword/ChangePassword.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./TextError.css\";\r\nconst TextError = (props) => {\r\n  return <div className=\"error\">{props.children}</div>;\r\n};\r\n\r\nexport default TextError;\r\n","import React, { useState } from \"react\";\r\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\r\nimport TextError from \"../../Component/TextError/TextError\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Form, Field, Formik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"../Login/Login.css\";\r\nimport { changePassword } from \"../../Redux/Auth/thunk\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChangePassword = () => {\r\n  const userid = useSelector((state) => state.auth.userid);\r\n  const dispatch = useDispatch();\r\n\r\n  let history = useHistory();\r\n\r\n  const [type, setType] = useState(\"password\");\r\n  const [type1, setType1] = useState(\"password\");\r\n  const [type2, setType2] = useState(\"password\");\r\n\r\n  const initialValues = {\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    old_password: \"\",\r\n  };\r\n  //validation rule for the form field in formik\r\n  const validationSchema = Yup.object().shape({\r\n    old_password: Yup.string().required(\"Old Password  is required\"),\r\n    password: Yup.string()\r\n      .required(\"Please Enter your password\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{6,}$/,\r\n        \"Must Contain 6 Characters, One alphabet and One Number \"\r\n      ),\r\n    confirm_password: Yup.string()\r\n      .required(\"Password is required\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n  });\r\n  //submit handler for formik\r\n  const onSubmit = (values) => {\r\n    const { password, old_password, confirm_password } = values;\r\n    const id = userid;\r\n    dispatch(\r\n      changePassword(id, password, old_password, confirm_password, history)\r\n    );\r\n  };\r\n  // toggle password\r\n  const handleClick = () => {\r\n    if (type === \"password\") {\r\n      setType(\"text\");\r\n    } else {\r\n      setType(\"password\");\r\n    }\r\n  };\r\n  // toggle confirm password\r\n  const handleClick1 = () => {\r\n    if (type1 === \"password\") {\r\n      setType1(\"text\");\r\n    } else {\r\n      setType1(\"password\");\r\n    }\r\n  };\r\n  // toggle confirm password\r\n  const handleClick2 = () => {\r\n    if (type2 === \"password\") {\r\n      setType2(\"text\");\r\n    } else {\r\n      setType2(\"password\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-bak\">\r\n      <div className=\"account-pages my-5 reset-container\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center \">\r\n            <div className=\"col-md-8 col-lg-6 col-xl-5\">\r\n              <div className=\"card overflow-hidden card-reset\">\r\n                <div className=\"bg-primary bg-soft\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                      <div className=\"text-center m-3\">\r\n                        <h5>Change password</h5>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body pt-0\">\r\n                  <div className=\"\">\r\n                    <Formik\r\n                      initialValues={initialValues}\r\n                      validationSchema={validationSchema}\r\n                      onSubmit={onSubmit}\r\n                    >\r\n                      {(formik) => {\r\n                        return (\r\n                          <Form autoComplete=\"off\" className=\"form-horizontal \">\r\n                            <div className=\"mb-3  password-field\">\r\n                              <label\r\n                                htmlFor=\"old_password\"\r\n                                className=\"form-label \"\r\n                              >\r\n                                Old Password\r\n                              </label>\r\n                              <div style={{ position: \"relative\" }}>\r\n                                <Field\r\n                                  type={type}\r\n                                  className=\"form-control change-textfield \"\r\n                                  name=\"old_password\"\r\n                                  placeholder=\"Old Password\"\r\n                                />\r\n                                <span onClick={handleClick}>\r\n                                  {type === \"password\" ? (\r\n                                    <BsFillEyeSlashFill />\r\n                                  ) : (\r\n                                    <BsFillEyeFill />\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                              <ErrorMessage\r\n                                name=\"old_password\"\r\n                                component={TextError}\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3  password-field\">\r\n                              <label htmlFor=\"password\" className=\"form-label \">\r\n                                New Password\r\n                              </label>\r\n                              <div style={{ position: \"relative\" }}>\r\n                                <Field\r\n                                  type={type2}\r\n                                  className=\"form-control change-textfield \"\r\n                                  name=\"password\"\r\n                                  placeholder=\"New Password\"\r\n                                />\r\n                                <span onClick={handleClick2}>\r\n                                  {type2 === \"password\" ? (\r\n                                    <BsFillEyeSlashFill />\r\n                                  ) : (\r\n                                    <BsFillEyeFill />\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                              <ErrorMessage\r\n                                name=\"password\"\r\n                                component={TextError}\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3  password-field\">\r\n                              <label\r\n                                htmlFor=\"confirm-password\"\r\n                                className=\"form-label \"\r\n                              >\r\n                                Confirm Password\r\n                              </label>\r\n                              <div style={{ position: \"relative\" }}>\r\n                                <Field\r\n                                  type={type1}\r\n                                  className=\"form-control change-textfield \"\r\n                                  name=\"confirm_password\"\r\n                                  placeholder=\"Confirm Password\"\r\n                                />\r\n                                <span onClick={handleClick1}>\r\n                                  {type1 === \"password\" ? (\r\n                                    <BsFillEyeSlashFill />\r\n                                  ) : (\r\n                                    <BsFillEyeFill />\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                              <ErrorMessage\r\n                                name=\"confirm_password\"\r\n                                component={TextError}\r\n                              />\r\n                            </div>\r\n                            <div className=\"mt-3 d-grid text-center\">\r\n                              <button\r\n                                className=\"btn btn-primary waves-effect waves-light mt-4 m-3\"\r\n                                type=\"submit\"\r\n                              >\r\n                                Save Changes\r\n                              </button>\r\n                            </div>\r\n                          </Form>\r\n                        );\r\n                      }}\r\n                    </Formik>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"names":["props","className","children","userid","useSelector","state","auth","dispatch","useDispatch","history","useHistory","useState","type","setType","type1","setType1","type2","setType2","validationSchema","Yup","shape","old_password","required","password","matches","confirm_password","oneOf","handleClick","handleClick1","handleClick2","initialValues","onSubmit","values","id","changePassword","formik","autoComplete","htmlFor","style","position","name","placeholder","onClick","component","TextError"],"sourceRoot":""}