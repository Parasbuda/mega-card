{"version":3,"file":"static/js/213.499f5b6c.chunk.js","mappings":"6IAeA,IAbgB,WAEd,OADAA,QAAQC,IAAI,OAEV,gBACEC,IAAKC,EACLC,IAAI,UAEJC,OAAO,OACPC,UAAU,W,8ECJhB,EAJkB,SAACC,GACjB,OAAO,gBAAKD,UAAU,QAAf,SAAwBC,EAAMC,a,4ICwGvC,UAjGsB,WACpB,IAAMC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,0BAO5CC,IANUJ,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKG,YACjCL,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKI,YAK1BC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,wBAEjCC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,+BACE,gBAAKhB,UAAU,YAAf,UACE,gBAAKA,UAAU,qCAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,6BAAf,UACE,gBAAKA,UAAU,6BAAf,UACE,iBAAKA,UAAU,kCAAf,WACE,gBAAKA,UAAU,8CAAf,UACE,gBAAKA,UAAU,MAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,kBAAf,UACE,eAAIA,UAAU,GAAd,qCAKR,gBAAKA,UAAU,iBAAf,UACE,gBAAKA,UAAU,GAAf,UACE,SAAC,KAAD,CACEiB,cAlCA,CACpBJ,MAAO,IAkCaL,iBAAkBA,EAClBU,SA1BL,SAACC,GAChBJ,GAASK,EAAAA,EAAAA,IAAcD,EAAON,SAsBZ,SAKG,SAACQ,GACA,OACE,UAAC,KAAD,CACEC,aAAa,MACbtB,UAAU,mBAFZ,WAIE,iBAAKA,UAAU,YAAf,WACE,mBACEuB,QAAQ,WACRvB,UAAU,aAFZ,kBAIQ,KACN,mBAAQA,UAAU,eAAlB,mBAEF,SAAC,KAAD,CACEwB,KAAK,OACLxB,UAAU,+BACVyB,KAAK,QACLC,YAAY,iBAEd,SAAC,KAAD,CACED,KAAK,QACLE,UAAWC,EAAAA,QAGf,gBAAK5B,UAAU,0BAAf,UACE,oBACEA,UAAU,oDACVwB,KAAK,SACLK,SAAU1B,EAHZ,sBAKYA,IAAW,SAAC,IAAD,oC","sources":["Component/Spinner/Spinner.js","Component/TextError/TextError.js","Pages/ResetPassword/ResetPassword.js"],"sourcesContent":["import React from \"react\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nconst Spinner = () => {\r\n  console.log(\"in\");\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      alt=\"spinner\"\r\n      // color={color}\r\n      height=\"30px\"\r\n      className=\"ml-4\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./TextError.css\";\r\nconst TextError = (props) => {\r\n  return <div className=\"error\">{props.children}</div>;\r\n};\r\n\r\nexport default TextError;\r\n","import React, { useEffect } from \"react\";\r\nimport TextError from \"../../Component/TextError/TextError\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Field, Formik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"../Login/Login.css\";\r\nimport Spinner from \"../../Component/Spinner/Spinner\";\r\nimport { resetPassword } from \"../../Redux/Auth/thunk\";\r\nimport Footer from \"../../Dashboard/Footer\";\r\nimport Select from \"react-select\";\r\nconst ResetPassword = () => {\r\n  const loading = useSelector((state) => state.auth.loading_reset_password);\r\n  const message = useSelector((state) => state.auth.message);\r\n  const branches = useSelector((state) => state.auth.branches);\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n  //validation rule for the form field in formik\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"Email is required\"),\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  //submit handler for formik\r\n  const onSubmit = (values) => {\r\n    dispatch(resetPassword(values.email));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-bak\">\r\n        <div className=\"account-pages reset-container my-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-md-8 col-lg-6 col-xl-5\">\r\n                <div className=\"card overflow-hidden card-reset\">\r\n                  <div className=\"bg-primary waves-effect waves-light bg-soft\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12\">\r\n                        <div className=\"text-center m-3\">\r\n                          <h5 className=\"\">Reset Password</h5>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body pt-0\">\r\n                    <div className=\"\">\r\n                      <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit}\r\n                      >\r\n                        {(formik) => {\r\n                          return (\r\n                            <Form\r\n                              autoComplete=\"off\"\r\n                              className=\"form-horizontal \"\r\n                            >\r\n                              <div className=\"mb-3 mt-3\">\r\n                                <label\r\n                                  htmlFor=\"username\"\r\n                                  className=\"form-label\"\r\n                                >\r\n                                  Email{\" \"}\r\n                                  <strong className=\"text-danger \">*</strong>\r\n                                </label>\r\n                                <Field\r\n                                  type=\"text\"\r\n                                  className=\"form-control textfield-login\"\r\n                                  name=\"email\"\r\n                                  placeholder=\"Enter Email\"\r\n                                />\r\n                                <ErrorMessage\r\n                                  name=\"email\"\r\n                                  component={TextError}\r\n                                />\r\n                              </div>\r\n                              <div className=\"mt-3 text-center d-grid\">\r\n                                <button\r\n                                  className=\"btn btn-primary waves-effect waves-light mt-4 m-3\"\r\n                                  type=\"submit\"\r\n                                  disabled={loading}\r\n                                >\r\n                                  Continue {loading && <Spinner />}\r\n                                </button>\r\n                              </div>\r\n                            </Form>\r\n                          );\r\n                        }}\r\n                      </Formik>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* <div className=\"mt-3 text-center text-white\">\r\n                  <div>\r\n                    <Footer />\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["console","log","src","spinner","alt","height","className","props","children","loading","useSelector","state","auth","loading_reset_password","validationSchema","message","branches","Yup","shape","email","required","dispatch","useDispatch","initialValues","onSubmit","values","resetPassword","formik","autoComplete","htmlFor","type","name","placeholder","component","TextError","disabled"],"sourceRoot":""}