{"version":3,"file":"static/js/291.c13824ee.chunk.js","mappings":"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","sources":["Component/Button/Button.js","Component/Spinner/Spinner.js","Component/TextError/TextError.js","Component/Tooltip/Tooltip.js","Component/Footer/Footer.js","Pages/Login/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Tooltip from \"../Tooltip/Tooltip\";\r\n\r\nconst Button = ({ type, className, disabled, title, loading, content, color, onClick }) => {\r\n\r\n    return (\r\n        <Tooltip content={content}>\r\n            <button onClick={onClick} type={type} className={className} disabled={disabled}>\r\n                {loading ? <Spinner color={color} /> : title}\r\n\r\n            </button>\r\n        </Tooltip>\r\n    )\r\n}\r\nexport default Button","import React from \"react\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nconst Spinner = () => {\r\n  console.log(\"in\");\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      alt=\"spinner\"\r\n      // color={color}\r\n      height=\"30px\"\r\n      className=\"ml-4\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./TextError.css\";\r\nconst TextError = (props) => {\r\n  return <div className=\"error\">{props.children}</div>;\r\n};\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nconst Tooltip = ({ content, children }) => {\r\n  return <Tippy content={content}>{children}</Tippy>;\r\n};\r\n\r\nexport default Tooltip;","import React from \"react\";\r\nconst date = new Date().getFullYear();\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        Â©{date} Card Management System. Powered by: Soori Techs. Pvt. Ltd.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Login.css\";\r\nimport photo from \"../../assets/profile-img.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Field, Formik, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextError from \"../../Component/TextError/TextError\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../Redux/Auth/thunk\";\r\nimport Spinner from \"../../Component/Spinner/Spinner\";\r\nimport { BiLock } from \"react-icons/bi\";\r\nimport { BsFillEyeFill, BsFillEyeSlashFill } from \"react-icons/bs\";\r\nimport { authConstants } from \"../../Redux/Auth/constants\";\r\nimport Select from \"react-select\";\r\nimport Button from \"../../Component/Button/Button\";\r\nimport Footer from \"../../Component/Footer/Footer\";\r\nconst Login = () => {\r\n  // props\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const dispatch = useDispatch();\r\n  const [type, setType] = useState(\"password\");\r\n  //initial values of form field in formik\r\n  const remember = localStorage.getItem(\"remember_me\");\r\n  const user = localStorage.getItem(\"username\");\r\n  const initialValues = {\r\n    username: user ? user : \"\",\r\n    password: \"\",\r\n    remember_me: remember === \"true\" ? true : false,\r\n  };\r\n  const message = useSelector((state) => state.auth.message);\r\n\r\n  useEffect(() => {\r\n    message?.status === true &&\r\n      dispatch({ type: authConstants.RESET_SUCCESS, payload: [] });\r\n  }, [dispatch]);\r\n  //validation rule for the form field in formik\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .required(\"Username is required\")\r\n      .min(3, \"Username must be at least 3 characters\")\r\n      .matches(\r\n        /(?=.*^[A-Za-z_]\\w).*$/,\r\n        \"Username should begin with _ or alphabet \"\r\n      ),\r\n    password: Yup.string()\r\n      .required(\"Please Enter your password\")\r\n      .min(4, \"Password should be at least 4 characters\"),\r\n    remember_me: Yup.bool(),\r\n  });\r\n  //submit handler for formik\r\n  const onSubmit = (values) => {\r\n    const { remember_me, username, password } = values;\r\n    localStorage.setItem(\"remember_me\", remember_me);\r\n    localStorage.setItem(\"username\", remember_me ? username : \"\");\r\n    dispatch(login(username, password));\r\n  };\r\n  // toggle password\r\n  const handleClick = () => {\r\n    if (type === \"password\") {\r\n      setType(\"text\");\r\n    } else {\r\n      setType(\"password\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-bak\">\r\n      <div className=\"account-pages\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"login-position\">\r\n              <div className=\"card overflow-hidden card-login\">\r\n                <div className=\"bg-primary bg-soft\">\r\n                  <div className=\"p-2 mt-3\">\r\n                    <h3 className=\"\">Welcome!</h3>\r\n                    <h6>Sign in to continue.</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body pt-0\">\r\n                  <div className=\"p-2\">\r\n                    <Formik\r\n                      initialValues={initialValues}\r\n                      validationSchema={validationSchema}\r\n                      onSubmit={onSubmit}\r\n                    >\r\n                      {(formik) => {\r\n                        return (\r\n                          <Form autoComplete=\"off\" className=\"form-horizontal \">\r\n                            <div className=\"mb-3 \">\r\n                              <label htmlFor=\"username\" className=\"form-label\">\r\n                                Username{\" \"}\r\n                                <strong className=\"text-danger \">*</strong>\r\n                              </label>\r\n                              <Field\r\n                                type=\"text\"\r\n                                className=\"form-control textfield-login\"\r\n                                name=\"username\"\r\n                                placeholder=\"Enter Username\"\r\n                              />\r\n                              <ErrorMessage\r\n                                name=\"username\"\r\n                                component={TextError}\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3  password-field\">\r\n                              <label htmlFor=\"password\" className=\"form-label \">\r\n                                Password{\" \"}\r\n                                <strong className=\"text-danger \">*</strong>\r\n                              </label>\r\n                              <div style={{ position: \"relative\" }}>\r\n                                <Field\r\n                                  type={type}\r\n                                  className=\"form-control textfield-login\"\r\n                                  name=\"password\"\r\n                                  placeholder=\"Enter Password\"\r\n                                />\r\n                                <span\r\n                                  style={{ lineHeight: \"10px\", top: \"11px\" }}\r\n                                  onClick={handleClick}\r\n                                >\r\n                                  {type === \"password\" ? (\r\n                                    <BsFillEyeSlashFill />\r\n                                  ) : (\r\n                                    <BsFillEyeFill />\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                              <ErrorMessage\r\n                                name=\"password\"\r\n                                component={TextError}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                              <Field\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name=\"remember_me\"\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"remember_me\"\r\n                              >\r\n                                Remember me\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"mt-4 mb-3 text-center\">\r\n                              <Button\r\n                                type={\"btn\"}\r\n                                className={\r\n                                  \"btn btn-primary waves-effect waves-light btn-login\"\r\n                                }\r\n                                loading={loading}\r\n                                disabled={loading}\r\n                                title={\"Login\"}\r\n                                content={\"Login\"}\r\n                              />\r\n                            </div>\r\n                            <div className=\"text-center mt-2\">\r\n                              <Link\r\n                                to=\"/reset-password\"\r\n                                className=\"text-decoration-none\"\r\n                              >\r\n                                <i className=\"me-1 \">\r\n                                  <BiLock />\r\n                                </i>\r\n                                Forgot password?\r\n                              </Link>\r\n                            </div>\r\n                          </Form>\r\n                        );\r\n                      }}\r\n                    </Formik>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-3 text-center text-white\">\r\n                <div>\r\n                  <Footer />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["type","className","disabled","title","loading","content","color","onClick","console","log","src","spinner","alt","height","props","children","date","Date","getFullYear","useSelector","state","auth","dispatch","useDispatch","useState","setType","remember","localStorage","getItem","user","initialValues","username","password","remember_me","message","useEffect","status","authConstants","payload","validationSchema","Yup","shape","required","min","matches","handleClick","onSubmit","values","setItem","login","formik","autoComplete","htmlFor","name","placeholder","component","TextError","style","position","lineHeight","top","Button","to"],"sourceRoot":""}