{"version":3,"file":"static/js/158.b5575ba0.chunk.js","mappings":"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","sources":["Component/Button/Button.js","Component/Data/Data.js","Component/Spinner/Spinner.js","Component/TextError/TextError.js","Component/Tooltip/Tooltip.js","Redux/User/api.js","Redux/User/action.js","Redux/User/thunk.js","utils/redundant/user.js"],"sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Tooltip from \"../Tooltip/Tooltip\";\r\n\r\nconst Button = ({ type, className, disabled, title, loading, content, color, onClick }) => {\r\n\r\n    return (\r\n        <Tooltip content={content}>\r\n            <button onClick={onClick} type={type} className={className} disabled={disabled}>\r\n                {loading ? <Spinner color={color} /> : title}\r\n\r\n            </button>\r\n        </Tooltip>\r\n    )\r\n}\r\nexport default Button","export const options = [\r\n    { id: 1, name: \"CASH\" },\r\n    { id: 2, name: \"CREDIT\" },\r\n  ];\r\n  export const genders = [\r\n    { id: 1, name: \"Male\" },\r\n    { id: 2, name: \"Female\" },\r\n  ];\r\n  export const tax_reg_systems = [\r\n    { id: 1, name: \"VAT\" },\r\n    { id: 2, name: \"PAN\" },\r\n    { id: 3, name: \"N/A\" },\r\n  ];\r\n  export const depreciationMethods = [\r\n    { id: 1, name: \"Straight line\" },\r\n    { id: 2, name: \"Diminishing Balance \" },\r\n    { id: 3, name: \"Unit Of Product\" },\r\n  ];","import React from \"react\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nconst Spinner = () => {\r\n  console.log(\"in\");\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      alt=\"spinner\"\r\n      // color={color}\r\n      height=\"30px\"\r\n      className=\"ml-4\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./TextError.css\";\r\nconst TextError = (props) => {\r\n  return <div className=\"error\">{props.children}</div>;\r\n};\r\n\r\nexport default TextError;\r\n","import React from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\nconst Tooltip = ({ content, children }) => {\r\n  return <Tippy content={content}>{children}</Tippy>;\r\n};\r\n\r\nexport default Tooltip;","import axiosInstance from \"../../utils/axios\";\r\n\r\n//obtaining the paginated data\r\nexport const getUser = (postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?offset=0&limit=${postsPerPage}&ordering=-id`\r\n  );\r\n\r\n//obtaining all data\r\nexport const getAllUser = () =>\r\n  axiosInstance.get(`api/v1/user-app/user?ordering=-id`);\r\n\r\nexport const getCurrentUser = (decoded) =>\r\n  axiosInstance.get(`api/v1/user-app/user/${decoded.user_id}`);\r\n//obtaining the previous page data from paginated data\r\nexport const getPrevious = (previous) => axiosInstance.get(previous);\r\n\r\n//obtaining the next page data from paginated data\r\nexport const getNext = (next) => axiosInstance.get(next);\r\n\r\n//obtaining the particular page data from paginated data\r\nexport const getPageUser = (number, postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?offset=${\r\n      (number - 1) * postsPerPage\r\n    }&limit=${postsPerPage}&ordering=-id`\r\n  );\r\n\r\n//creating function\r\nexport const createUser = (body) =>\r\n  axiosInstance.post(`api/v1/user-app/user`, body);\r\n\r\n//deleting function\r\nexport const deleteUser = (id) =>\r\n  axiosInstance.delete(`api/v1/user-app/user/${id}`);\r\n\r\n//update function\r\nexport const updateUser = (id, body) =>\r\n  axiosInstance.patch(`api/v1/user-app/update-user/${id}`, body);\r\n\r\n//searching function\r\nexport const handleSearch = (search, postsPerPage) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?offset=0&limit=${postsPerPage}&search=${search}`\r\n  );\r\n\r\n// checking the redundant data\r\nexport const checkRedundantData = (e, cancelToken) =>\r\n  axiosInstance.get(`api/v1/user-app/user?username=${e.target.value.trim()}`, {\r\n    cancelToken: cancelToken.token,\r\n  });\r\nexport const checkRedundantEmployeeID = (e, cancelToken) =>\r\n  axiosInstance.get(\r\n    `api/v1/user-app/user?employee_id=${e.target.value.trim()}`,\r\n    {\r\n      cancelToken: cancelToken.token,\r\n    }\r\n  );\r\n//deleting the image\r\nexport const handleDelete = (id, body) =>\r\n  axiosInstance.patch(`api/v1/user-app/user/${id}`, body);\r\n//change password\r\nexport const changePassword = (body, id) =>\r\n  axiosInstance.get(`api/v1/user-app/change_password/${id}`);\r\n","import { userConstants } from \"./constants\";\r\n// actions\r\nexport const loadingAction = () => ({\r\n  type: userConstants.LOADING_USER,\r\n});\r\nexport const loadingUpdatedAction = () => ({\r\n  type: userConstants.LOADING_UPDATED,\r\n});\r\nexport const getUserSuccessAction = (data) => ({\r\n  type: userConstants.GET_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getUserFailAction = (error) => ({\r\n  type: userConstants.GET_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const getAllUserSuccessAction = (data) => ({\r\n  type: userConstants.GET_ALL_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getAllUserFailAction = (error) => ({\r\n  type: userConstants.GET_ALL_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const getUserInfoSuccessAction = (data) => ({\r\n  type: userConstants.GET_USER_INFO_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getUserInfoFailAction = (error) => ({\r\n  type: userConstants.GET_USER_INFO_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const createUserSuccessAction = (data) => ({\r\n  type: userConstants.CREATE_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const createUserFailAction = (error) => ({\r\n  type: userConstants.CREATE_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const deleteUserSuccessAction = (data) => ({\r\n  type: userConstants.USER_DELETED_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const deleteUserFailAction = (error) => ({\r\n  type: userConstants.USER_DELETED_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const updatedUserSuccessAction = (data) => ({\r\n  type: userConstants.UPDATE_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const updatedUserFailAction = (error) => ({\r\n  type: userConstants.UPDATE_USER_FAIL,\r\n  payload: error,\r\n});\r\nexport const deletePhotoSuccessAction = (data) => ({\r\n  type: userConstants.PHOTO_DELETED_SUCCESS,\r\n  payload: data,\r\n});\r\nexport const deletePhotoFailAction = (error) => ({\r\n  type: userConstants.PHOTO_DELETED_FAIL,\r\n  payload: error,\r\n});\r\n\r\n","import * as API from \"./api\";\r\nimport * as action from \"./action\";\r\nimport { errorFunction, successFunction } from \"../../Component/Alert\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n//get  Bank\r\nexport const getUser = (postsPerPage) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getUser(postsPerPage);\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n// get all bank\r\nexport const getAllUser = () => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getAllUser();\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction(filteredData));\r\n  } catch (error) {\r\n    dispatch(action.getAllUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get previous  page\r\nexport const getPrevious = (previous) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getPrevious(previous);\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get next  page\r\nexport const getNext = (next) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.getNext(next);\r\n    const filteredData = data.results.filter(\r\n      (user) => user.is_superuser === false\r\n    );\r\n    dispatch(action.getUserSuccessAction({ ...data, results: filteredData }));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//get particular page\r\nexport const getPageUser =\r\n  ({ number, postsPerPage }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(action.loadingAction());\r\n      const { data } = await API.getPageUser(number, postsPerPage);\r\n\r\n      dispatch(action.getUserSuccessAction(data));\r\n    } catch (error) {\r\n      dispatch(action.getUserFailAction(error));\r\n      errorFunction(error);\r\n    }\r\n  };\r\n\r\nexport const getCurrentUser = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const decoded = token && jwt_decode(token);\r\n    const { data } = await API.getCurrentUser(decoded);\r\n    dispatch(action.getUserInfoSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserInfoFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\nexport const createUser =\r\n  (\r\n    {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      username,\r\n      employee_id,\r\n      is_active,\r\n      user_branch,\r\n      group,\r\n      gender,\r\n      password,\r\n      confirm_password,\r\n      history,\r\n    },\r\n    currentPage\r\n  ) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const body = JSON.stringify({\r\n        first_name,\r\n        middle_name,\r\n        last_name,\r\n        email,\r\n        username,\r\n        employee_id,\r\n        group,\r\n        is_active,\r\n        user_branch,\r\n        gender,\r\n        password,\r\n        confirm_password,\r\n      });\r\n      dispatch(action.loadingAction());\r\n      await API.createUser(body);\r\n      // dispatch(action.createUserSuccessAction(data));\r\n      successFunction(\"User created successfully \");\r\n      history.push(\"/user\");\r\n    } catch (error) {\r\n      dispatch(action.createUserFailAction(error));\r\n      errorFunction(\"Failed to create user.\");\r\n    }\r\n  };\r\n// Delete  bank\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.deleteUser(id);\r\n    dispatch(action.deleteUserSuccessAction(data));\r\n    dispatch(getUser());\r\n    successFunction(\"Bank deleted Successfully\");\r\n  } catch (error) {\r\n    dispatch(action.deleteUserFailAction(error));\r\n    errorFunction(\"Failed to delete Bank \");\r\n  }\r\n};\r\n//update\r\nexport const updateUser =\r\n  (id, values, history, currentPage = undefined) =>\r\n  async (dispatch) => {\r\n    const {\r\n      first_name,\r\n      middle_name,\r\n      last_name,\r\n      email,\r\n      username,\r\n      employee_id,\r\n      user_branch,\r\n      group,\r\n      gender,\r\n      is_active,\r\n      remarks,\r\n    } = values;\r\n    try {\r\n      dispatch(action.loadingUpdatedAction());\r\n\r\n      const body = JSON.stringify({\r\n        first_name,\r\n        middle_name,\r\n        last_name,\r\n        email,\r\n        username,\r\n        employee_id,\r\n        user_branch,\r\n        group,\r\n\r\n        gender,\r\n        is_active,\r\n        remarks,\r\n      });\r\n      const { data } = await API.updateUser(id, body);\r\n\r\n      successFunction(\"User Updated Successfully \");\r\n      history.push(\"/user\");\r\n    } catch (error) {\r\n      dispatch(action.updatedUserFailAction(error));\r\n      errorFunction(\"Failed to Update User\");\r\n    }\r\n  };\r\n//handle Search\r\nexport const handleSearch = (search, postsPerPage) => async (dispatch) => {\r\n  try {\r\n    dispatch(action.loadingAction());\r\n    const { data } = await API.handleSearch(search, postsPerPage);\r\n    dispatch(action.getUserSuccessAction(data));\r\n  } catch (error) {\r\n    dispatch(action.getUserFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n//delete photo\r\nexport const deletePhoto = (id) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify({ photo: \"\" });\r\n    const { data } = await API.handleDelete(id, body);\r\n    dispatch(action.deletePhotoSuccessAction(data));\r\n    successFunction(data);\r\n  } catch (error) {\r\n    dispatch(action.deletePhotoFailAction(error));\r\n    errorFunction(error);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  checkRedundantData,\r\n  checkRedundantEmployeeID,\r\n} from \"../../Redux/User/api\";\r\nlet cancelToken;\r\nexport const checkRedundantDataUser = async (e) => {\r\n  //Check if there are any previous pending requests\r\n  if (typeof cancelToken !== typeof undefined) {\r\n    cancelToken.cancel(\"Operation canceled due to new request.\");\r\n  }\r\n  //Save the cancel token for the current request\r\n  cancelToken = axios.CancelToken.source();\r\n  try {\r\n    const { data } = await checkRedundantData(e, cancelToken);\r\n    if (data.results.length > 0) {\r\n      return true;\r\n    }\r\n    if (data.results.length <= 0) {\r\n      return false;\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nexport const checkRedundantDataID = async (e) => {\r\n  //Check if there are any previous pending requests\r\n  if (typeof cancelToken !== typeof undefined) {\r\n    cancelToken.cancel(\"Operation canceled due to new request.\");\r\n  }\r\n  //Save the cancel token for the current request\r\n  cancelToken = axios.CancelToken.source();\r\n  try {\r\n    const { data } = await checkRedundantEmployeeID(e, cancelToken);\r\n    if (data.results.length > 0) {\r\n      return true;\r\n    }\r\n    if (data.results.length <= 0) {\r\n      return false;\r\n    }\r\n  } catch (error) {}\r\n};\r\n"],"names":["type","className","disabled","title","loading","content","color","onClick","genders","id","name","console","log","src","spinner","alt","height","props","children","getUser","postsPerPage","axiosInstance","getPrevious","previous","getNext","next","getPageUser","number","createUser","body","updateUser","handleSearch","search","checkRedundantData","e","cancelToken","target","value","trim","token","checkRedundantEmployeeID","loadingAction","userConstants","loadingUpdatedAction","getUserSuccessAction","data","payload","getUserFailAction","error","updatedUserFailAction","dispatch","action","API","filteredData","results","filter","user","is_superuser","errorFunction","currentPage","first_name","middle_name","last_name","email","username","employee_id","is_active","user_branch","group","gender","password","confirm_password","history","JSON","stringify","successFunction","push","values","remarks","checkRedundantDataUser","cancel","axios","length","checkRedundantDataID"],"sourceRoot":""}